global
    log /dev/log local0
    log /dev/log local1 notice
#    chroot /var/lib/haproxy
#    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
#    stats timeout 30s
    user haproxy
    group haproxy
    daemon

# Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log    global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
#    errorfile 400 /etc/haproxy/errors/400.http
#    errorfile 403 /etc/haproxy/errors/403.http
#    errorfile 408 /etc/haproxy/errors/408.http
#    errorfile 500 /etc/haproxy/errors/500.http
#    errorfile 502 /etc/haproxy/errors/502.http
#    errorfile 503 /etc/haproxy/errors/503.http
#    errorfile 504 /etc/haproxy/errors/504.http

frontend traefik_http_bind
    bind *:80
    bind [::]:80
    mode tcp
    option tcplog
    default_backend router_traefik_http

frontend traefik_https_bind
    bind *:443
    bind [::]:443
    mode tcp
    option tcplog
    default_backend router_traefik_https

frontend k8s_bind 
    bind *:6443 
    bind [::]:6443
    mode tcp
    option tcplog
    default_backend router_k8s

frontend nfs_bind 
    bind *:2049 
    bind [::]:2049
    mode tcp
    option tcplog
    default_backend router_nfs
    
frontend ingress_http_bind
    bind *:8080
    bind [::]:8080
    mode tcp
    option tcplog
    default_backend router_ingress_http

frontend ingress_https_bind
    bind *:8443
    bind [::]:8443
    mode tcp
    option tcplog
    default_backend router_ingress_https

frontend postgres_bind 
    bind *:5432 
    bind [::]:5432
    mode tcp
    option tcplog
    default_backend router_postgres
    
frontend mongodb_bind 
    bind *:27017 
    bind [::]:27017
    mode tcp
    option tcplog
    default_backend router_mongodb
    
frontend redis_bind 
    bind *:6379 
    bind [::]:6379
    mode tcp
    option tcplog
    default_backend router_redis

backend router_traefik_http
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:80 check

backend router_traefik_https
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:443 check

backend router_k8s
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:6443 check

backend router_nfs
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:2049 check
    
backend router_ingress_http
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:8080 check

backend router_ingress_https
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:8443 check
    
backend router_postgres
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:5432 check
    
backend router_mongodb
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:27017 check
    
backend router_redis
    mode tcp
    option tcp-check
    server virtual haproxy.cams7.local:6379 check
    

